!
! The specialities of this case are that the consistently stabilized 
! formulation for magnetostatics is used (ensuring a unique vector potential 
! solution) and that a block-preconditioned linear solver is applied to solve 
! the resulting linear algebra problem; see the second solver section.
!
! This case has been derived from the test mgdyn_bh_gauge.
!

$ fileprefix = "tet"

Header
  mesh db "." "mesh_$fileprefix$"
end

Simulation
  max output level = 5
  coordinate system = cartesian 3D
  coordinate mapping(3) = 1 2 3
  simulation type = steady state
  steady state max iterations = 1
  output intervals = 1
!  Post File = "block.vtu"
end

Constants
  permittivity of vacuum = 8.8542e-12
end

Solver 1
  exec solver = before simulation
  Procedure = "StatCurrentSolve" "StatCurrentSolver"
  Equation = "Stat Current Solver"
  Variable = Potential
  variable dofs = 1
  calculate volume current = True
  calculate joule heating = False
  current control = real 12.5
  linear system solver = iterative
  linear system iterative method = CG
  linear system max iterations = 1000
  linear system convergence tolerance = 1e-08
  linear system preconditioning = ILU0
  linear system abort not converged = True
  linear system residual output = 1
end

solver 2
  equation = "MGDynamics"
  Variable = P
  Procedure = "MagnetoDynamics" "WhitneyAVSolver"
  use piola transform = logical false
  Fix input current density = Logical true
  Newton-Raphson Iteration = Logical True
  nonlinear system max iterations = 10
  nonlinear system convergence tolerance = 1e-6

  use lagrange gauge = logical true
  lagrange gauge penalization coefficient = real 1e+0

!  linear system symmetric = True
!  linear system solver = iterative

  Linear System Solver = Block
  Block Gauss-Seidel = Logical True
  Block A-V System = Logical True
  Block Matrix Reuse = Logical True
  Block Preconditioner = Logical True

! Linear system solver for outer loop
!-----------------------------------------
  Outer: Linear System Solver = "Iterative"
  Outer: Linear System Iterative Method = GCR
  Outer: Linear System Convergence Tolerance = 1e-6
  Outer: Linear System GCR Restart =  50
  Outer: Linear System Residual Output =  1
  Outer: Linear System Max Iterations =  200

! Linear system solver for blocks
!-----------------------------------------
  linear system max iterations = 250
  linear system residual output = 10
  linear system convergence tolerance = 1e-6

! The default would be to solve first for V and then for A.
! For the stabilized Lagrange multiplier formulation the reverse order 
! seems natural:   
  Block Order(2) = Integer 2 1

! The linear solver for the updates of A:
  Block 22: Linear System Solver = Iterative
  Block 22: Linear System Iterative Method = BiCGStab2
  Block 22: Linear System Preconditioning = None
  Block 22: Linear System Abort Not Converged = False

! The linear solver for the updates of V:
  Block 11: Linear system Solver = Iterative
  Block 11: Linear System Iterative Method = GC
  Block 11: Linear System Preconditioning = ILU0
  Block 11: Linear System Abort Not Converged = False

!  use tree gauge = logical false
!  linear system refactorize = logical true

end

solver 3
  equation = "MGDynamicsCalc"
  Procedure = "MagnetoDynamics" "MagnetoDynamicsCalcFields"
  linear system symmetric = True
  Potential variable = string "P"
  calculate magnetic field strength = True
  steady state convergence tolerance = 1e-6
  linear system solver = iterative
  linear system preconditioning = none
  linear system residual output = 0
  linear system max iterations = 5000
  linear system iterative method = CG
  linear system convergence tolerance = 1e-8
end

solver 4
  exec solver = never
  equation = resultoutput
  Procedure = "ResultOutputSolve" "ResultOutputSolver"
  vtu format = True
  discontinuous bodies = logical true
  vector field 1 = String "Volume Current"
  vector field 2 = String "Magnetic Flux Density E"
  vector field 3 = String "Magnetic Field Strength E"
end

solver 5
  equation = scalars
  Procedure = "SaveData" "SaveScalars"
  show norm index = 2
  parallel Reduce = true
  filename = f.dat
end

solver 6
  equation = scalars2
  Procedure = "SaveData" "SaveScalars"
  show norm index = 3
  parallel reduce = true
end

equation 1
  name = coupled equations
  active solvers(2) = 2 3
end

equation 2
  name = coupled equations
  active solvers(3) = 1 2 3
end

equation 3
  name = coupled equations
  active solvers(2) = 2 3
end

material 1
  name = air
  electric conductivity = 0.0
  relative permeability = 1.0
  relative permittivity = 1.0
end

material 2
  relative permittivity = 1.0
  name = iron
  electric conductivity = 0.0
  relative permeability = 1000.0
end

material 3
  relative permittivity = 1.0
  name = copper
  electric conductivity = 58.14e6
  relative permeability = 1.0
end

body 1
  name = air
  target bodies(1) = 1
  equation = 1
  material = 1
end

body 2
  name = ring
  target bodies(1) = 2
  equation = 3
  material = 2
end

body 3
  name = cable
  target bodies(1) = 3
  equation = 2
  material = 3
  body force = 1
end

boundary condition 1
  name = "bc potential"
  target boundaries(1) = 52
  P {e} = real 0
  potential = 0.001
end

boundary condition 2
  name = "bc volgate ground"
  target boundaries(1) = 42
  P {e} = real 0
  potential = 0.0
end

boundary condition 3
  name = "BCn flux parallel"
  target boundaries(3) = 4 28 29
  P {e} = real 0
end

! The following BC makes the Lagrange multiplier unique
! (having a unique solution may be important for the block-
! preconditioned solver):
boundary condition 4
  name = "Point constraint"
  target nodes(1) = 120
  P = real 0
end


body force 1
  name = "current density"
  current density 1 = 0
  current density 2 = 0
  current density 3 = equals volume current 3
end

Solver 6 :: Reference Norm = Real  8.05311383E-03
Solver 6 :: Reference Norm tolerance = Real 2e-4
Solver 5 :: reference norm = real 5.28894624E-05
Solver 5 :: reference norm tolerance = real 2e-4

